[{"/Users/joon/Desktop/Foodie/frontend/src/index.js":"1","/Users/joon/Desktop/Foodie/frontend/src/reportWebVitals.js":"2","/Users/joon/Desktop/Foodie/frontend/src/App.js":"3","/Users/joon/Desktop/Foodie/frontend/src/component/MainPage.js":"4","/Users/joon/Desktop/Foodie/frontend/src/component/RandomFoods.js":"5","/Users/joon/Desktop/Foodie/frontend/src/component/RandomFood.js":"6","/Users/joon/Desktop/Foodie/frontend/src/component/hooks/useGeoLocation.js":"7","/Users/joon/Desktop/Foodie/frontend/src/component/hoc/hoc.js":"8","/Users/joon/Desktop/Foodie/frontend/src/component/DetailPage/DetailPage.js":"9"},{"size":449,"mtime":1620882561487,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611540465371,"results":"12","hashOfConfig":"11"},{"size":167,"mtime":1620611366181,"results":"13","hashOfConfig":"11"},{"size":1547,"mtime":1621212044887,"results":"14","hashOfConfig":"11"},{"size":474,"mtime":1621212044878,"results":"15","hashOfConfig":"11"},{"size":1351,"mtime":1621212044876,"results":"16","hashOfConfig":"11"},{"size":672,"mtime":1620884407224,"results":"17","hashOfConfig":"11"},{"size":59,"mtime":1621212044879,"results":"18","hashOfConfig":"11"},{"size":247,"mtime":1621212044875,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1oslajm",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joon/Desktop/Foodie/frontend/src/index.js",[],["42","43"],"/Users/joon/Desktop/Foodie/frontend/src/reportWebVitals.js",[],"/Users/joon/Desktop/Foodie/frontend/src/App.js",[],"/Users/joon/Desktop/Foodie/frontend/src/component/MainPage.js",["44","45","46"],"import React, { useState, useEffect } from \"react\";\nimport RandomFoods from \"../component/RandomFoods\";\nimport axios from 'axios';\nimport useGeoLocation from \"./hooks/useGeoLocation\";\n\nconst MainPage = () => {\n  \n\n  const [foods, setFoods] = useState([]);\n  const [foodInfo, setFoodInfo] = useState([]);\n\n  const {\n    loaded,\n    coordinates: { lat, lng },\n  } = useGeoLocation();\n\n\n\n  const fetchHandler = () => {\n    const URL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n    \n    axios.get(URL)\n      .then(res => { \n     \n        return res.data.meals[0]\n      })\n      .then(data => {\n        console.log(data)\n        const foodList = {  title:data.strMeal,\n                            id: data.idMeal,\n                            image: data.strMealThumb,\n                            category: data.strCategory,\n                            area:data.strArea\n                          }\n                         \n        setFoods([foodList])\n      })\n      .catch(error => {\n        console.log(error);\n      });\n     \n  }\n\n \n  return (\n    <div className='main-page'>\n      <h1>Google Food</h1>\n      <button onClick={fetchHandler}>Search</button>\n     \n      \n      {foods.length > 0 ? <RandomFoods foods={foods} lat={lat} lng={lng} /> : <div>GOOD LUCK</div>}\n      <div>\n        {loaded ? (\n          <>\n            <p>Your Latitude: {lat}</p>\n            <p>Your Longitude: {lng}</p>\n          </>\n        ) : (\n          \"Location data not available yet\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","/Users/joon/Desktop/Foodie/frontend/src/component/RandomFoods.js",[],"/Users/joon/Desktop/Foodie/frontend/src/component/RandomFood.js",["47"],"import React,{useState} from \"react\";\nimport axios from 'axios';\nimport Aux from './hoc/hoc';\nimport DetailPage from './DetailPage/DetailPage';\nconst RandomFood = ({ title, image,category,area,lat,lng }) => {\n  const [details,setDetail] = useState([]);\n  const detailHandler = () => {\n      \n      const URL = \"http://localhost:5000/random/detail\";\n      const data = {\n        'title':title,\n        'image':image,\n        'category':category,\n        'area':area,\n        'lat':lat,\n        'lng':lng\n      }\n      fetch(URL,{\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n      }) \n      .then((res)=>{\n        return res.json();\n      },(error) => {\n        console.log(error);\n      })\n      .then(resData => {\n        console.log(resData.data.businesses)\n        setDetail(resData.data.businesses)\n      })\n  }\n  return (\n    <Aux>\n      <h2>{title}</h2>\n      <img \n        src={image} \n        alt={\"\"} \n        onClick={detailHandler}\n        />\n      {details.map(detail => (\n        <DetailPage \n          name={detail.name}\n          image={detail.image_url}\n          key={detail.id}\n          lat={lat}\n          lng={lng}\n        />\n      ))}\n    </Aux>\n  );\n};\n\nexport default RandomFood;\n","/Users/joon/Desktop/Foodie/frontend/src/component/hooks/useGeoLocation.js",["48"],"import { useState, useEffect } from \"react\";\n\nconst useGeoLocation = () => {\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: { lat: \"\", lng: \"\" },\n  });\n\n  const onSuccess = (position) => {\n    const { longitude, latitude } = position.coords;\n    setLocation({\n      ...location,\n      loaded: true,\n      coordinates: { lat: latitude, lng: longitude },\n    });\n  };\n\n  const onError = (error) => {\n    setLocation({\n      ...location,\n      loaded: true,\n      err: error,\n    });\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n\n  return location;\n};\n\nexport default useGeoLocation;\n","/Users/joon/Desktop/Foodie/frontend/src/component/hoc/hoc.js",[],"/Users/joon/Desktop/Foodie/frontend/src/component/DetailPage/DetailPage.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"57","line":10,"column":10,"nodeType":"55","messageId":"56","endLine":10,"endColumn":18},{"ruleId":"53","severity":1,"message":"58","line":10,"column":20,"nodeType":"55","messageId":"56","endLine":10,"endColumn":31},{"ruleId":"53","severity":1,"message":"59","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":28,"column":6,"nodeType":"62","endLine":28,"endColumn":8,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'foodInfo' is assigned a value but never used.","'setFoodInfo' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onError' and 'onSuccess'. Either include them or remove the dependency array.","ArrayExpression",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [onError, onSuccess]",{"range":"69","text":"70"},[612,614],"[onError, onSuccess]"]